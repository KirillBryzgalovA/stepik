'''
Крестики-нолики
    Два игрока играют в крестики-нолики. Напишите программу, которая после каждого хода игрока проверяет поле и, если игра завершилась, выводит сообщение о результате. Игру всегда начинает "Игрок 1"; игра происходит на поле 3*3. Несмотря на то, что по классическим правилам первый игрок всегда начинает с "крестика", в этой задаче он может выбрать, какой символ использовать.

    Формат ввода: пока игра не завершилась, игроки по очереди вводят строки из трех элементов: номер строки и столбца, куда совершается ход, и один из символов 'x' или 'o'. Нумерация строк и столбцов начинается с 1.

    Формат вывода: как только один из игроков одерживает победу, программа должна напечатать сообщение в формате "Игрок <№ игрока> победил". Если после хода поле полностью заполнено, но ни один игрок не победил, программа должна напечатать "Ничья".

    Примечание: заметьте, что для символов 'x' и 'o' используются латинские буквы.
'''

import numpy as np


def check_win(plaer, mark):
    # проверяем по строкам
    for i in range(3):
        temp = board[i, :]
        if temp[temp == mark].size == 3:
            return plaer
    # проверяем по столбцам
    for j in range(3):
        temp = board[:, j]
        if temp[temp == mark].size == 3:
            return plaer
    # проверяем по диагоналям
    diag1 = np.diagonal(board)
    if diag1[diag1 == mark].size == 3:
        return plaer
    temp = np.vstack((board[:, 2], board[:, 1], board[:, 0]))
    diag2 = np.diagonal(temp)
    if diag2[diag2 == mark].size == 3:
        return plaer
    return False


# Заготовка под игровое поле. Символом "-" обозначается пустая клетка
board = np.array([['-', '-', '-'],
                  ['-', '-', '-'],
                  ['-', '-', '-']])

player = "Игрок 1"
result = ""

while True:
    # проверка заполненности матрицы
    flat = board.flatten()
    if flat[flat == '-'].size == 0:
        break
    step = input().split()
    x = int(step[0])
    y = int(step[1])
    mark = step[2]  # x или o
    board[x - 1, y - 1] = mark
    # Проверка выигрыша
    if check_win(player, mark) == player:
        result = player
        break
    if player == "Игрок 1":
        player = "Игрок 2"
    else:
        player = "Игрок 1"

if len(result) > 0:
    print(result + " победил")
else:
    print("Ничья")
