'''
Частотный анализ
    Воспользуемся методом частотного анализа, чтобы расшифровать секретное послание. Кроме зашифрованного текста Вы располагаете информацией о том, сколько раз конкретная буква русского алфавита встречается в этом тексте. Используя эти данные, выведите дешифрованный текст. Гарантируется, что частоты букв не повторяются. Знаки препинания и пробелы не шифруются.
    Формат ввода: в первой строке передается зашифрованный текст. На последующих строках до символа точки вводится информация о тексте вида <буква>: <частота>.
    Формат вывода: одна строка – дешифрованный текст.
'''

passwd = input()

dict_freq = {}
while True:
    s = input()
    if s == '.':
        break

    # распарсим ввод
    arr = s.split(':')
    letter = arr[0].strip()
    freq = arr[1].strip()

    if letter not in dict_freq:
        dict_freq[letter] = int(freq)

# занесем в словарь подсчитанное кол-во вхождений букв в пароль
dict_passwd = {}

for ch in passwd:
    if ch == ' ' or ch == ',' or ch == '.' or ch == ';' or ch == ':':
        continue
    dict_passwd[ch] = dict_passwd.get(ch, 0) + 1

# сопоставить эти словари

for elem in passwd:
    if elem == ' ' or elem == ',' or elem == '.' or elem == ';' or elem == ':':
        print(elem, end='')
    for let, val in dict_freq.items():
        if val == dict_passwd.get(elem, 0):
            print(let, end='')
