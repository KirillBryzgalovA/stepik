'''
Побочная диагональ
На вход программе подается натуральное число nn. Напишите программу, которая создает матрицу размером n \times nn×n и заполняет её по следующему правилу:
числа на побочной диагонали равны 11;
числа, стоящие выше этой диагонали, равны 00;
числа, стоящие ниже этой диагонали, равны 22.
Полученную матрицу выведите на экран. Числа в строке разделяйте одним пробелом.
Формат входных данных
На вход программе подается натуральное число nn — количество строк и столбцов в матрице.
Формат выходных данных
Программа должна вывести матрицу в соответствии с условием задачи.

Примечание. Побочная диагональ — это диагональ, идущая из правого верхнего в левый нижний угол матрицы.
'''

n = int(input())

matrix = [[0 for j in range(n)] for i in range(n)]

for i in range(n):
    for j in range(n):
        if j == n - i - 1:
            matrix[i][j] = 1
        elif (j > i > n - 1 - j) or (i > j and i > n - 1 - j) or (i == j and i >= n / 2):
            matrix[i][j] = 2
        print(matrix[i][j], end=' ')
    print()
