"""Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное расстояние в сантиметрах,
которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу, которая определит,
куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу, которая выведет точку,
в которой окажется черепашка после всех команд. Для простоты они решили считать, что движение начинается в точке (0, 0),
 и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n, которые нужно выполнить черепашке, после чего n строк с самими командами.
Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки. Все координаты целочисленные.
Sample Input:
4
север 10
запад 20
юг 30
восток 40
Sample Output:
20 -20
"""


def go(direction, point, step):
    if direction == 'север':
        point[1] += int(step)
    elif direction == 'запад':
        point[0] -= int(step)
    elif direction == 'восток':
        point[0] += int(step)
    elif direction == 'юг':
        point[1] -= int(step)
    return point


n = int(input())  # число команд n, которые нужно выполнить черепашке,
point = [0, 0]  # координаты черепашки
list_path = []

while n > 0:
    n -= 1
    list_path.append(input().split())

for step in list_path:
    point = go(step[0], point, step[1])

print(point[0], point[1])
